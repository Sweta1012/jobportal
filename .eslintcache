[{"C:\\Users\\Arya\\Desktop\\CS\\INTERVIEW\\Egen\\job-portal\\src\\index.js":"1","C:\\Users\\Arya\\Desktop\\CS\\INTERVIEW\\Egen\\job-portal\\src\\App.js":"2","C:\\Users\\Arya\\Desktop\\CS\\INTERVIEW\\Egen\\job-portal\\src\\reportWebVitals.js":"3","C:\\Users\\Arya\\Desktop\\CS\\INTERVIEW\\Egen\\job-portal\\src\\components\\ViewJobs.js":"4","C:\\Users\\Arya\\Desktop\\CS\\INTERVIEW\\Egen\\job-portal\\src\\components\\header.js":"5"},{"size":547,"mtime":1610824810999,"results":"6","hashOfConfig":"7"},{"size":4782,"mtime":1610935254740,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":7324,"mtime":1610937421353,"results":"10","hashOfConfig":"7"},{"size":7584,"mtime":1610937120272,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"14coihv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Arya\\Desktop\\CS\\INTERVIEW\\Egen\\job-portal\\src\\index.js",[],["24","25"],"C:\\Users\\Arya\\Desktop\\CS\\INTERVIEW\\Egen\\job-portal\\src\\App.js",["26","27","28"],"import { Component } from 'react';\nimport './App.css';\nimport ViewJobs from './components/ViewJobs';\nimport Header from './components/header';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nclass App extends Component {\n\n  state = {\n    originalJobs: [],\n    jobs: [],\n    selectedJob: [],\n    theme: 'light',\n    page: 1,\n    latitude: null,\n    longitude: null,\n    isLoadMore: true,\n    isFilterPanel: true\n  }\n\n  componentDidMount() {\n    this.getGithubJobs(this.state.page);\n    this.getLocation();\n  }\n  getGithubJobs = (page) => {\n    fetch(`/positions.json?page=${page}`)\n    .then((res) => res.json())\n    .then(resJSON => {\n      \n      if(resJSON && resJSON.length > 0) {\n        this.setState({\n          originalJobs: [...this.state.originalJobs, ...resJSON],\n          jobs: [...this.state.jobs, ...resJSON],\n          isLoadMore: resJSON.length < 50 ? false : true\n        })\n      }\n    }) \n  }\n  changeTheme = () => {\n    let theme =this.state.theme;\n\n    if(theme === 'light') {\n        theme = 'dark';\n\n        this.setState({\n            theme\n        })\n    } else {\n        theme = 'light';\n\n        this.setState({\n            theme\n        })\n    }\n  }\n  getLocation = () => {\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates);\n    }\n  }\n  getCoordinates = (position) => {\n    if(position.coords.latitude && position.coords.longitude) {\n      this.setState({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      })\n\n      this.getUserLocation();\n    }\n  }\n  getUserLocation = () => {\n    const API_KEY = 'AIzaSyDSsfy9NRNOQL5tLRAPaGweVtcJ8hy5xNs';\n\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${this.state.latitude},${this.state.longitude}&key=${API_KEY}`)\n    .then(resp => resp.json())\n    .then(data => {\n      let userLocation = data.results.length > 0 ? data.results[6].formatted_address : '';\n\n      if(userLocation) {\n          // this.filterJobs(null, null, userLocation);\n      }\n    })\n    .catch(error => console.log(\"error occured while getting user location \", error));\n  }\n  filterJobs = (search, onlyFullTime, location) => {\n    console.log(\"in filter \", search, onlyFullTime, location);\n    let searchParam = search ? search.toLowerCase() : '';\n    let locationParam = location ? location.toLowerCase() : '';\n\n    let originalJobs = this.state.originalJobs;\n    let filteredJobs = originalJobs.filter((item, index) => {\n      if(onlyFullTime && (searchParam !== '' || locationParam !== '')) {\n        return item.type === 'Full Time' && (item.location.toLowerCase() === locationParam || item.title.toLowerCase() === searchParam || item.company.toLowerCase() === searchParam);\n      } else if(!onlyFullTime && (searchParam !== '' || locationParam !== '')) {\n        return item.location.toLowerCase() === locationParam || item.title.toLowerCase() === searchParam || item.company.toLowerCase() === searchParam;\n      } else if(onlyFullTime && searchParam === '' && locationParam === '') {\n        return item.type === 'Full Time';\n      } else {\n        return item;\n      }\n    });\n\n    if(!onlyFullTime && !search && !location) {\n      this.setState({\n        jobs: originalJobs\n      })\n    } else {\n      this.setState({\n        jobs: filteredJobs\n      })\n    }\n  }\n  loadMore = () => {\n    let page = this.state.page + 1;\n\n    this.setState({\n      page\n    })\n\n    this.getGithubJobs(page);\n  }\n  viewJob = (job) => {\n    console.log(\"selected job \", job);\n    let selectedJob = [];\n    selectedJob.push(job);\n\n    this.setState({\n      selectedJob,\n      isFilterPanel: false\n    })\n  }\n  goBack = () => {\n    this.setState({\n      isFilterPanel: true\n    })\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <Header theme={this.state.theme} changeTheme={this.changeTheme} filterJobs={this.filterJobs} isFilterPanel={this.state.isFilterPanel} selectedJob={this.state.selectedJob} goBack={this.goBack} />\n\n            {/* <Route path='/' exact render={({history}) => {\n                return <ViewJobs jobs={this.state.jobs} theme={this.state.theme} loadMore={this.loadMore} isLoadMore={this.state.isLoadMore} viewJob={this.viewJob} history={history}/>\n              }} /> \n\n            <Route path=\"/jobDetail/:id\" render={({history}) => {\n                return <JobDetail theme={this.state.theme} history={history} selectedJob={this.state.selectedJob}/>\n              }} /> */}\n          \n          <ViewJobs jobs={this.state.jobs} theme={this.state.theme} loadMore={this.loadMore} isLoadMore={this.state.isLoadMore} viewJob={this.viewJob} isFilterPanel={this.state.isFilterPanel} selectedJob={this.state.selectedJob} />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Arya\\Desktop\\CS\\INTERVIEW\\Egen\\job-portal\\src\\reportWebVitals.js",[],"C:\\Users\\Arya\\Desktop\\CS\\INTERVIEW\\Egen\\job-portal\\src\\components\\ViewJobs.js",["29","30"],"C:\\Users\\Arya\\Desktop\\CS\\INTERVIEW\\Egen\\job-portal\\src\\components\\header.js",["31","32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":5,"column":10,"nodeType":"40","messageId":"41","endLine":5,"endColumn":16},{"ruleId":"38","severity":1,"message":"42","line":5,"column":18,"nodeType":"40","messageId":"41","endLine":5,"endColumn":23},{"ruleId":"38","severity":1,"message":"43","line":5,"column":42,"nodeType":"40","messageId":"41","endLine":5,"endColumn":48},{"ruleId":"38","severity":1,"message":"44","line":7,"column":11,"nodeType":"40","messageId":"41","endLine":7,"endColumn":18},{"ruleId":"45","severity":1,"message":"46","line":68,"column":61,"nodeType":"47","endLine":68,"endColumn":119},{"ruleId":"48","severity":1,"message":"49","line":113,"column":55,"nodeType":"50","messageId":"51","endLine":113,"endColumn":56},{"ruleId":"48","severity":1,"message":"49","line":126,"column":55,"nodeType":"50","messageId":"51","endLine":126,"endColumn":56},{"ruleId":"52","severity":1,"message":"53","line":171,"column":49,"nodeType":"47","endLine":171,"endColumn":52},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Router' is defined but never used.","'viewJob' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]